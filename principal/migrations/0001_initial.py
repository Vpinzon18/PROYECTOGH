# Generated by Django 4.2.6 on 2023-10-20 22:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import principal.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='transorteForm',
            fields=[
                ('id_transporte', models.AutoField(primary_key=True, serialize=False)),
                ('Caminando', models.BooleanField(default=False)),
                ('Bicicleta', models.BooleanField(default=False)),
                ('Moto', models.BooleanField(default=False)),
                ('Carro', models.BooleanField(default=False)),
                ('Comparto_Vehiculo', models.BooleanField(default=False)),
                ('Transporte_Publico', models.BooleanField(default=False)),
                ('Taxi', models.BooleanField(default=False)),
                ('Plataforma_movilidad_Uber_Didi', models.BooleanField(default=False)),
                ('Patineta', models.BooleanField(default=False)),
                ('Modalidad_Virtual', models.BooleanField(default=False)),
                ('idUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Formulario_Transporte',
            },
        ),
        migrations.CreateModel(
            name='situacionesafectableForm',
            fields=[
                ('id_situacionesafectable', models.AutoField(primary_key=True, serialize=False)),
                ('Problemas_de_conducta', models.BooleanField(default=False)),
                ('Problemas_de_pareja', models.BooleanField(default=False)),
                ('Problemas_intrafamiliares', models.BooleanField(default=False)),
                ('Dificultad_para_acceder_a_educación', models.BooleanField(default=False)),
                ('Deudas_que_superan_los_ingresos', models.BooleanField(default=False)),
                ('Enfermedad_de_algún_familiar', models.BooleanField(default=False)),
                ('Desempleo', models.BooleanField(default=False)),
                ('Muerte_reciente_de_personas_cercanas', models.BooleanField(default=False)),
                ('Consumo_de_sustancias_psicoactivas', models.BooleanField(default=False)),
                ('Muerte_reciente_de_mascotas', models.BooleanField(default=False)),
                ('Ninguna_situacion_afectable', models.BooleanField(default=False)),
                ('idUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Formulario_Situaciones_Afectables_Familiares',
            },
        ),
        migrations.CreateModel(
            name='recursosdigitales',
            fields=[
                ('id_recursodigital', models.AutoField(primary_key=True, serialize=False)),
                ('Microsoft_OneDrive_Google_Drive', models.BooleanField(default=False)),
                ('Microsoft_o_Google_Calendar', models.BooleanField(default=False)),
                ('Sharepoint', models.BooleanField(default=False)),
                ('Microsoft_Sway', models.BooleanField(default=False)),
                ('Microsoft_Forms', models.BooleanField(default=False)),
                ('Microsoft_PowerBI', models.BooleanField(default=False)),
                ('Microsoft_Excel', models.BooleanField(default=False)),
                ('Microsoft_Planner', models.BooleanField(default=False)),
                ('Microsoft_Power_Automate', models.BooleanField(default=False)),
                ('Microsoft_Project', models.BooleanField(default=False)),
                ('Microsoft_Teams', models.BooleanField(default=False)),
                ('Microsoft_Yammer', models.BooleanField(default=False)),
                ('Kahoot', models.BooleanField(default=False)),
                ('Google_Formularios', models.BooleanField(default=False)),
                ('Google_Jamboard', models.BooleanField(default=False)),
                ('Slack', models.BooleanField(default=False)),
                ('Google_Padlet', models.BooleanField(default=False)),
                ('Google_Meet', models.BooleanField(default=False)),
                ('Google_Classroom', models.BooleanField(default=False)),
                ('Google_Drawing', models.BooleanField(default=False)),
                ('Google_Sites', models.BooleanField(default=False)),
                ('Google_Blogger', models.BooleanField(default=False)),
                ('Google_Earth', models.BooleanField(default=False)),
                ('Google_Collections', models.BooleanField(default=False)),
                ('Google_Currents', models.BooleanField(default=False)),
                ('Google_Docs', models.BooleanField(default=False)),
                ('Google_Sheets', models.BooleanField(default=False)),
                ('Google_Slides', models.BooleanField(default=False)),
                ('Google_Expeditions', models.BooleanField(default=False)),
                ('Asana', models.BooleanField(default=False)),
                ('Trello', models.BooleanField(default=False)),
                ('VPN', models.BooleanField(default=False)),
                ('Camscanner', models.BooleanField(default=False)),
                ('idUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Formulario_RecursosDigitales',
            },
        ),
        migrations.CreateModel(
            name='mascotasForm',
            fields=[
                ('id_mascota', models.AutoField(primary_key=True, serialize=False)),
                ('Tipo_Mascota', models.CharField(choices=[('perro', 'perro'), ('gato', 'gato'), ('pájaro', 'pájaro'), ('conejo', 'conejo'), ('hámster', 'hámster'), ('pez', 'pez'), ('tortuga', 'tortuga'), ('iguana', 'iguana'), ('serpiente', 'serpiente'), ('loro', 'loro'), ('canario', 'canario'), ('caballo', 'caballo'), ('cerdo', 'cerdo'), ('oveja', 'oveja'), ('cabra', 'cabra'), ('tarantula', 'tarantula'), ('Mini Pig', 'Mini Pig'), ('Ninguno', 'Ninguno')], max_length=30)),
                ('Nombre_Mascota', models.CharField(blank=True, max_length=20, null=True)),
                ('idUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Formulario_Mascotas',
            },
        ),
        migrations.CreateModel(
            name='FormularioForm',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Documento', models.PositiveIntegerField()),
                ('Tipo_Documento', models.CharField(choices=[(' Cédula de Ciudadanía', 'Cédula de Ciudadanía'), (' Cédula de Extranjería', 'Cédula de Extranjería'), (' Tarjeta de Identidad', 'Tarjeta de Identidad'), (' Pasaporte', 'Pasaporte'), (' Registro Civil', 'Registro Civil')], max_length=30)),
                ('tipo_sangre', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3)),
                ('Cargo_Actual', models.CharField(choices=[('Academic Advisor', 'Academic Advisor'), ('Analista Contable', 'Analista Contable'), ('Analista de compensación', 'Analista de compensación'), ('Analista de comunicaciones', 'Analista de comunicaciones'), ('Analista de Gestión Organizacional', 'Analista de Gestión Organizacional'), ('Asesor Servicios Integrales', 'Asesor Servicios Integrales'), ('Asesora EduSA', 'Asesora EduSA'), ('Asistente Académico', 'Asistente Académico'), ('Asistente Cultural', 'Asistente Cultural'), ('Asistente de Comunicaciones', 'Asistente de Comunicaciones'), ('Asistente de Dirección', 'Asistente de Dirección'), ('Asistente de Innovación y Negocios', 'Asistente de Innovación y Negocios'), ('Asistente de Recursos Administrativos', 'Asistente de Recursos Administrativos'), ('Asistente de servicios bibliotecarios', 'Asistente de servicios bibliotecarios'), ('Asistente Maker', 'Asistente Maker'), ('Aprendiz', 'Aprendiz'), ('Auxiliar Contable', 'Auxiliar Contable'), ('Auxiliar de mantenimiento y recursos físicos', 'Auxiliar de mantenimiento y recursos físicos'), ('Auxiliar de Selección y contratación', 'Auxiliar de Selección y contratación'), ('Auxiliar de seguridad', 'Auxiliar de seguridad'), ('Auxiliar de Soporte Técnico', 'Auxiliar de Soporte Técnico'), ('Auxiliar Tecnología Educativa', 'Auxiliar Tecnología Educativa'), ('Coordinador académico sede sur', 'Coordinador académico sede sur'), ('Coordinador de acompañamiento psicosocial', 'Coordinador de acompañamiento psicosocial'), ('Coordinador de mercadeo', 'Coordinador de mercadeo'), ('Coordinador de proyectos especiales', 'Coordinador de proyectos especiales'), ('Coordinador de Programación y Gestión Comercial', 'Coordinador de Programación y Gestión Comercial'), ('Coordinador de servicios STEAM y bibliotecas', 'Coordinador de servicios STEAM y bibliotecas'), ('Coordinador sede virtual', 'Coordinador sede virtual'), ('Coordinadora de programa Kids and Teens', 'Coordinadora de programa Kids and Teens'), ('Coordinadora de responsabilidad social y egresados', 'Coordinadora de responsabilidad social y egresados'), ('Coordinadora sede norte', 'Coordinadora sede norte'), ('Desarrollador de producto', 'Desarrollador de producto'), ('Director Cultural', 'Director Cultural'), ('Director de Innovación y negocios', 'Director de Innovación y negocios'), ('Director Financiero y Administrativo', 'Director Financiero y Administrativo'), ('Director General', 'Director General'), ('Docente', 'Docente'), ('Jefe de Comunicaciones', 'Jefe de Comunicaciones'), ('Jefe de Contabilidad', 'Jefe de Contabilidad'), ('Jefe de Desarrollo de Producto', 'Jefe de Desarrollo de Producto'), ('Jefe de Gestión Humana', 'Jefe de Gestión Humana'), ('Jefe de Gestión Organizacional', 'Jefe de Gestión Organizacional'), ('Jefe de mantenimiento y recursos físicos', 'Jefe de mantenimiento y recursos físicos'), ('Jefe de Servicios Culturales', 'Jefe de Servicios Culturales'), ('Jefe de Servicios Integrales', 'Jefe de Servicios Integrales'), ('Recepcionista', 'Recepcionista'), ('Subdirector académico', 'Subdirector académico'), ('Support Teacher', 'Support Teacher'), ('Técnico electricista', 'Técnico electricista'), ('Técnico electrónico', 'Técnico electrónico'), ('Conductor-mensajero', 'Conductor-mensajero')], max_length=100)),
                ('Numero_Contacto', models.PositiveIntegerField()),
                ('Numero_Emergencia', models.PositiveIntegerField()),
                ('Fecha_Nacimiento', models.DateField(default=django.utils.timezone.now)),
                ('Departamento_Nacimiento', models.CharField(max_length=20, validators=[principal.models.contiene_mayuscula])),
                ('Ciudad_Nacimiento', models.CharField(max_length=20, validators=[principal.models.contiene_mayuscula])),
                ('Ciudad_Residencia', models.CharField(max_length=20, validators=[principal.models.contiene_mayuscula])),
                ('Direccion_Residencia', models.CharField(max_length=100)),
                ('Sexo', models.CharField(choices=[('Masculino', 'Masculino'), ('Femenino', 'Femenino')], max_length=15)),
                ('Estado_Civil', models.CharField(choices=[('Soltero(a)', 'Soltero(a)'), ('Casado(a)', 'Casado(a)'), ('Union Libre', 'Union Libre'), ('Viudo(a)', 'Viudo(a)')], max_length=15)),
                ('Etnia', models.CharField(choices=[('Mestizo', 'Mestizo'), ('Afrocolombiano', 'Afrocolombiano'), ('Indígena', 'Indígena'), ('Blanco', 'Blanco'), ('Meztizo', 'Meztizo'), ('Mulato', 'Mulato'), ('Zambo', 'Zambo'), ('Raizal', 'Raizal')], max_length=15)),
                ('Talla_Camisa', models.CharField(choices=[('XS', 'XS'), ('S', 'S'), ('M', 'M'), ('L', 'L'), ('XL', 'XL'), ('XXL', 'XXL'), ('XXXL', 'XXXL')], max_length=15)),
                ('Vegetariano', models.CharField(choices=[('Si', 'Si'), ('No', 'No')], max_length=2)),
                ('Actualmente_Tiene_Restricciones_Laborales_Por_Su_EPS', models.CharField(choices=[('Si', 'Si'), ('No', 'No')], max_length=2)),
                ('Actualmente_Se_Encuentra_En_Perdida_De_Capacidad_Laboral', models.CharField(choices=[('Si', 'Si'), ('No', 'No')], max_length=2)),
                ('Pensionado', models.CharField(choices=[('Por vejez', 'Por vejez'), ('Por invalidez', 'Por invalidez'), ('No', 'No')], max_length=13)),
                ('Discapacidad_Familiar', models.CharField(choices=[('Si', 'Si'), ('No', 'No')], max_length=2)),
                ('Tipo_Vivienda', models.CharField(choices=[('Arrendada', 'Arrendada'), ('propia', 'propia'), ('Familiar', 'Familiar'), ('Compartida Con Otras Familias', 'Compartida Con Otras Familias')], max_length=29)),
                ('Estrato_Vivienda', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6')], max_length=2)),
                ('Tiempo_Desplazamiento', models.CharField(choices=[('Realizo teletrabajo', 'Realizo teletrabajo'), ('Menos de 15 minutos', 'Menos de 15 minutos'), ('Entre 15 y 30 minutos', 'Entre 15 y 30 minutos'), ('Entre 30 y 45 minutos', 'Entre 30 y 45 minutos'), ('Entre 45 y 60 minutos', 'Entre 45 y 60 minutos'), ('Entre 60 y 75 minutos', 'Entre 60 y 75 minutos'), ('Entre 75 y 90 minutos', 'Entre 75 y 90 minutos'), ('Entre 90 y 120 minutos', 'Entre 90 y 120 minutos'), ('Entre 120 y 150 minutos', 'Entre 120 y 150 minutos'), ('Entre 150 y 180 minutos', 'Entre 150 y 180 minutos'), ('Entre 180 y 210 minutos', 'Entre 180 y 210 minutos'), ('Entre 210 y 240 minutos', 'Entre 210 y 240 minutos'), ('Mas de 240 minutos', 'Mas de 240 minutos')], max_length=23)),
                ('Tiempo_Vinculacion_Laboral', models.CharField(choices=[('Menos de 1 año', 'Menos de 1 año'), ('de 1 a 3 años', 'de 1 a 3 años'), ('de 3 a 5 años', 'de 3 a 5 años'), ('de 5 a 10 años', 'de 5 a 10 años'), ('de 10 a 15 años', 'de 10 a 15 años'), ('de 15 a 20 años', 'de 15 a 20 años'), ('mas de 20 años', 'mas de 20 años')], max_length=20)),
                ('Tiempo_Cargo_Laboral', models.CharField(choices=[('Menos de 1 año', 'Menos de 1 año'), ('de 1 a 3 años', 'de 1 a 3 años'), ('de 3 a 5 años', 'de 3 a 5 años'), ('de 5 a 10 años', 'de 5 a 10 años'), ('de 10 a 15 años', 'de 10 a 15 años'), ('de 15 a 20 años', 'de 15 a 20 años'), ('mas de 20 años', 'mas de 20 años')], max_length=20)),
                ('Nivel_Educativo_Mas_Alto', models.CharField(choices=[('Bachiller', 'Bachiller'), ('Tecnico', 'Tecnico'), ('Tecnologo', 'Tecnologo'), ('Profesional/Licenciado', 'Profesional/Licenciado'), ('Especialista', 'Especialista'), ('Magister', 'Magister'), ('Doctorado', 'Doctorado'), ('Posdoctorado', 'Posdoctorado'), ('Ninguno', 'Ninguno')], max_length=22)),
                ('Ultimo_Nivel_Educativo', models.CharField(max_length=250)),
                ('Tipo_Contrato_Form', models.CharField(choices=[('Termino Fijo', 'Termino Fijo'), ('Indefinido', 'Indefinido'), ('Prestacion de Servicios', 'Prestacion de Servicios')], max_length=23)),
                ('Horario_laboral', models.CharField(max_length=200)),
                ('Horas_Laborales', models.CharField(choices=[('4-8 Horas', '4-8 Horas'), ('9-16 Horas', '9-16 Horas'), ('17-25 Horas', '17-25 Horas'), ('26-35 Horas', '26-35 Horas'), ('36-45 Horas', '36-45 Horas'), ('46-55 Horas', '46-55 Horas')], max_length=23)),
                ('Promedio_Ingresos', models.CharField(choices=[('0.5-1 SMLV ', '0.5-1 SMLV '), ('1 SMLV ($1.160.000)', '1 SMLV ($1.160.000)'), ('Entre 1-2 SMLV ', 'Entre 1-2 SMLV '), ('Entre 1-3 SMLV ', 'Entre 1-3 SMLV '), ('Entre 1-4 SMLV ', 'Entre 1-4 SMLV '), ('Entre 1-5 SMLV ', 'Entre 1-5 SMLV '), ('Entre 1-6 SMLV ', 'Entre 1-6 SMLV '), ('Mas de 6 SMLV ', 'Mas de 6 SMLV ')], max_length=23)),
                ('file', models.FileField(upload_to='', validators=[principal.models.validate_image_file_extension])),
                ('idUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Formulario_Sociodemografico',
            },
        ),
        migrations.CreateModel(
            name='familiarForm',
            fields=[
                ('id_Familiar', models.AutoField(primary_key=True, serialize=False)),
                ('Parentesco_Familiar', models.CharField(choices=[('Pareja', 'Pareja'), ('Abuelos', 'Abuelos'), ('Otro Familiar', 'Otro Familiar'), ('Ciudador(a)', 'Ciudador(a)'), ('Guardería', 'Guardería'), ('No Requiere', 'No Requiere'), ('No Tengo Hijos', 'No Tengo Hijos')], max_length=50)),
                ('Nombres_Familiar', models.CharField(max_length=20)),
                ('Apellidos_Familiar', models.CharField(max_length=20)),
                ('Fecha_Nacimiento_Familiar', models.DateField(default=django.utils.timezone.now)),
                ('Convivencia_Hijo', models.CharField(choices=[('Si', 'Si'), ('No', 'No'), ('No Tengo Hijos', 'No Tengo Hijos')], max_length=14)),
                ('Requiere_Lugar_Para_Llevar_hijo', models.CharField(choices=[('Si', 'Si'), ('No', 'No'), ('No Tengo Hijos', 'No Tengo Hijos')], max_length=14)),
                ('Sexo_Familiar', models.CharField(choices=[('Masculino', 'Masculino'), ('Femenino', 'Femenino')], max_length=15)),
                ('Dependiente_Economico', models.CharField(choices=[('Si', 'Si'), ('No', 'No')], max_length=2)),
                ('idUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Formulario_FamiliaresConvivencia',
            },
        ),
        migrations.CreateModel(
            name='familiardiscapacidadForm',
            fields=[
                ('id_familiardiscapacidadForm', models.AutoField(primary_key=True, serialize=False)),
                ('padre', models.BooleanField(default=False)),
                ('madre', models.BooleanField(default=False)),
                ('hijo', models.BooleanField(default=False)),
                ('hija', models.BooleanField(default=False)),
                ('abuelo', models.BooleanField(default=False)),
                ('abuela', models.BooleanField(default=False)),
                ('nieto', models.BooleanField(default=False)),
                ('nieta', models.BooleanField(default=False)),
                ('hermano', models.BooleanField(default=False)),
                ('hermana', models.BooleanField(default=False)),
                ('tio', models.BooleanField(default=False)),
                ('tia', models.BooleanField(default=False)),
                ('primo', models.BooleanField(default=False)),
                ('prima', models.BooleanField(default=False)),
                ('sobrino', models.BooleanField(default=False)),
                ('sobrina', models.BooleanField(default=False)),
                ('cuñado', models.BooleanField(default=False)),
                ('cuñada', models.BooleanField(default=False)),
                ('suegro', models.BooleanField(default=False)),
                ('suegra', models.BooleanField(default=False)),
                ('yerno', models.BooleanField(default=False)),
                ('nuera', models.BooleanField(default=False)),
                ('esposo', models.BooleanField(default=False)),
                ('esposa', models.BooleanField(default=False)),
                ('Ninguno', models.BooleanField(default=False)),
                ('idUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Formulario_Familiar_Discapacidad',
            },
        ),
        migrations.CreateModel(
            name='aseguramientoForm',
            fields=[
                ('id_aseguramiento', models.AutoField(primary_key=True, serialize=False)),
                ('medicina_prepagada', models.BooleanField(default=False)),
                ('plan_complementario_salud', models.BooleanField(default=False)),
                ('seguro_de_vida', models.BooleanField(default=False)),
                ('seguro_exequial', models.BooleanField(default=False)),
                ('emergencia_medica', models.BooleanField(default=False)),
                ('previser', models.BooleanField(default=False)),
                ('ninguna', models.BooleanField(default=False)),
                ('idUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Formulario_aseguramiento',
            },
        ),
    ]
